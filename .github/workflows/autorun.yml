name: AUTO_RUN

on:
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai
#    只有当发起操作的人是这个仓库的拥有者时才会执行（防止 PR 滥用）
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install python package
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run API
      env:
        # GitHub 的账号信息
        GH_REPO: ${{ github.repository }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        # 以下是微软的账号信息
        APP_NUM: ${{ secrets.APP_NUM }}
        MS_TOKEN: ${{ secrets.MS_TOKEN }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        # 发送信息
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        # 持久化
        LOG_SERVER_URL: ${{ secrets.LOG_SERVER_URL }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        : "${GH_TOKEN:?Environment variable GH_TOKEN is not set}"
        : "${MS_TOKEN:?Environment variable MS_TOKEN is not set}"
        : "${CLIENT_ID:?Environment variable CLIENT_ID is not set}"
        : "${CLIENT_SECRET:?Environment variable CLIENT_SECRET is not set}"
        python new.py

    - name: Upload Log File to Server
      continue-on-error: true
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        : "${SSH_PRIVATE_KEY:?Environment variable SSH_PRIVATE_KEY is not set}"
        : "${LOG_SERVER_HOST:?Environment variable LOG_SERVER_HOST is not set}"
        : "${LOG_SERVER_USER:?Environment variable LOG_SERVER_USER is not set}"
        : "${LOG_FILE_PATH:?Environment variable LOG_FILE_PATH is not set}"
        : "${LOG_FILENAME:?Environment variable LOG_FILENAME is not set}"

        mkdir -p ~/.ssh
        echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan "${LOG_SERVER_HOST}" >> ~/.ssh/known_hosts
        
        LOG_DATE=$(date +'%Y%m%d')
        mv ${LOG_FILENAME}.log ${LOG_FILENAME}_${LOG_DATE}.log

        scp ${LOG_FILENAME}_${LOG_DATE}.log "${LOG_SERVER_USER}@${LOG_SERVER_HOST}:${LOG_FILE_PATH}"
        
        echo "Log file uploaded successfully."

    - name: Post Process
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        python utils.py --task PostProcess
